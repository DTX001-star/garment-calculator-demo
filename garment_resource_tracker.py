import streamlit as st
import pandas as pd
from datetime import date

st.title("üß• Qu·∫£n l√Ω T√†i Nguy√™n May M·∫∑c theo Ng√†y")

# Define shirt types and their resource needs
shirt_resources = {
    "√Åo thun": {"fabric": 1.2, "thread": 25, "buttons": 0, "labor_hr": 0.3},
    "√Åo s∆° mi": {"fabric": 2.0, "thread": 40, "buttons": 6, "labor_hr": 0.5},
    "√Åo kho√°c": {"fabric": 3.0, "thread": 60, "buttons": 8, "labor_hr": 1.0},
}

# Select shirt type
shirt_type = st.selectbox("Ch·ªçn lo·∫°i √°o:", list(shirt_resources.keys()))

# Display predefined resources for selected shirt type
st.subheader(f"T√†i nguy√™n m·∫∑c ƒë·ªãnh cho {shirt_type}:")
resources = shirt_resources[shirt_type]

st.write(f"- V·∫£i: {resources['fabric']} m√©t/c√°i")
st.write(f"- Ch·ªâ: {resources['thread']} m√©t/c√°i")
st.write(f"- N√∫t: {resources['buttons']} c√°i/c√°i √°o")
st.write(f"- Gi·ªù c√¥ng: {resources['labor_hr']} gi·ªù/c√°i")

# Enter production quantity
quantity = st.number_input("S·ªë l∆∞·ª£ng s·∫£n xu·∫•t d·ª± ki·∫øn:", min_value=1, value=100, step=1)

# Arrival dates for resources
st.subheader("Ng√†y t√†i nguy√™n d·ª± ki·∫øn v·ªÅ kho c√¥ng ty:")

fabric_date = st.date_input("Ng√†y v·∫£i v·ªÅ:", date.today())
thread_date = st.date_input("Ng√†y ch·ªâ v·ªÅ:", date.today())
buttons_date = st.date_input("Ng√†y n√∫t v·ªÅ:", date.today())
labor_date = st.date_input("Ng√†y b·∫Øt ƒë·∫ßu s·∫£n xu·∫•t:", date.today())

# Calculations
total_fabric = resources["fabric"] * quantity
total_thread = resources["thread"] * quantity
total_buttons = resources["buttons"] * quantity
total_labor_hours = resources["labor_hr"] * quantity

# Summarize Results
st.subheader("üìÖ T·ªïng h·ª£p t√†i nguy√™n v√† th·ªùi gian:")

data = {
    "T√†i nguy√™n": ["V·∫£i (m√©t)", "Ch·ªâ (m√©t)", "N√∫t (c√°i)", "Gi·ªù c√¥ng (gi·ªù)"],
    "T·ªïng s·ªë l∆∞·ª£ng": [total_fabric, total_thread, total_buttons, total_labor_hours],
    "Ng√†y d·ª± ki·∫øn v·ªÅ kho": [fabric_date, thread_date, buttons_date, labor_date]
}

summary_df = pd.DataFrame(data)

st.table(summary_df)
